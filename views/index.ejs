<h2>Home</h2>

<a href="/auth/signup">Signup</a>
<a href="/auth/login">Login</a>
<a href="/auth/logout">Logout</a>
<a href="/profile">Profile</a>

<div id="map">
    <script>
        var map;
        var markers = [];

        function initMap() {
            // Constructor creates a new map - only center and zoom are required
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 47.6076641, lng: -122.3355026},
                zoom: 8
            });
            var locations = [
                {title: 'Pike Place Market', location: {lat: 47.609223, lng: -122.341402}},
                {title: 'Safeco Field', location: {lat: 47.591429, lng: -122.332789}},
                {title: 'Stumbling Monk', location: {lat: 47.619429, lng: -122.324291}},
                {title: 'KEXP', location: {lat: 47.623036, lng: -122.354862}},
                {title: 'Lake Union Park', location: {lat: 47.626822, lng: -122.337328}}
            ]
           
            var largeInfoWindow = new google.maps.InfoWindow();
            var bounds = new google.maps.LatLngBounds();

            for (var i = 0; i < locations.length; i++) {
            // Get the position from the location array.
            var position = locations[i].location;
            var title = locations[i].title;
            // Create a marker per location, and put into markers array.
            var marker = new google.maps.Marker({
                map: map,
                position: position,
                title: title,
                animation: google.maps.Animation.DROP,
                id: i
            });
            // Push the marker to our array of markers.
            markers.push(marker);
            // Create an onclick event to open an infowindow at each marker.
            marker.addListener('click', function() {
                populateInfoWindow(this, largeInfowindow);
            });
            bounds.extend(markers[i].position);
            }
            // Extend the boundaries of the map for each marker
            map.fitBounds(bounds);
        }
        // This function populates the infowindow when the marker is clicked. We'll only allow
        // one infowindow which will open at the marker that is clicked, and populate based
        // on that markers position.
        function populateInfoWindow(marker, infowindow) {
            // Check to make sure the infowindow is not already opened on this marker.
            if (infowindow.marker != marker) {
            infowindow.marker = marker;
            infowindow.setContent('<div>' + marker.title + '</div>');
            infowindow.open(map, marker);
            // Make sure the marker property is cleared if the infowindow is closed.
            infowindow.addListener('closeclick',function(){
                infowindow.setMarker = null;
            });
            }
        }    
    </script>
</div>